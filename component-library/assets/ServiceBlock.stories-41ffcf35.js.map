{"version":3,"file":"ServiceBlock.stories-41ffcf35.js","sources":["../../src/contexts/AppStateContext.tsx","../../src/hooks/useAppState.ts","../../src/components/base/HorizontalCard.tsx","../../src/components/block/ServicesBlock.tsx"],"sourcesContent":["import {type BannerProps} from '../components/base/Banner';\nimport {createContext, type Dispatch, type SetStateAction} from 'react';\n\nexport type AppStateContextOptions = {\n\tbannerOpen: boolean;\n\tbookingOpen: boolean;\n\tcontactOpen: boolean;\n\n\tBannerProps: BannerProps;\n\tsetBannerProps: Dispatch<SetStateAction<BannerProps>>;\n\n\ttoggleBanner: (state?: boolean) => void;\n\ttoggleContact: (state?: boolean) => void;\n\ttoggleBooking: (state?: boolean) => void;\n};\n\nexport const AppStateContext = createContext<AppStateContextOptions | undefined>(undefined);\n","import {AppStateContext} from '../contexts/AppStateContext';\nimport {type AppStateContextOptions} from '../contexts/AppStateContext';\nimport {useContext} from 'react';\n\ntype UseAppState = () => AppStateContextOptions;\n\nexport const useAppState: UseAppState = () => {\n\tconst context = useContext(AppStateContext);\n\n\tif (context === undefined) {\n\t\tthrow new Error('Not used inside the AppStateContextProvider!');\n\t}\n\n\treturn context;\n};\n","import {KeyboardArrowRight} from '@mui/icons-material';\nimport {Typography} from '@mui/material';\nimport {styled} from '@mui/material/styles';\nimport {type FC, type ComponentPropsWithRef} from 'react';\nimport {useAppState} from '../../hooks/useAppState';\nimport {colorIterator} from '../../utils/colorIterator';\nimport {ActionStack, type ActionStackProps} from './ActionStack';\nimport {Button} from './Button';\nimport {Image, type ImageProps} from './Image';\nimport clsx from 'clsx';\n\ntype CardProps = {\n\ttitle?: string;\n\tsubtitle?: string;\n\tdescription?: string;\n\tImageProps?: ImageProps;\n\tactions?: ActionStackProps['actions'];\n} & ComponentPropsWithRef<'a'>;\n\nconst CardAnchor = styled('a')`\n\tcursor: pointer;\n\tdisplay: grid;\n\tgrid-template-columns: 1fr 2fr;\n\tgap: 1rem;\n\n\t.image {\n\t\taspect-ratio: 1;\n\t\tposition: relative;\n\t\tborder-radius: 0.5rem;\n\t\toverflow: hidden;\n\n\t\t.Image-root {\n\t\t\tz-index: 0;\n\t\t\tposition: absolute;\n\t\t\ttop: 0;\n\t\t\tleft: 0;\n\t\t\theight: 100%;\n\t\t\twidth: 100%;\n\t\t\tobject-fit: cover;\n\n\t\t\ttransition: all 300ms;\n\t\t}\n\t}\n\n\t.content {\n\t\tdisplay: grid;\n\t\talign-content: start;\n\t\tgrid-template-columns: 1fr;\n\t\tgap: 0.5rem;\n\n\t\t.ActionStack {\n\t\t\tmargin-top: 0.5rem;\n\t\t\tjustify-content: start;\n\t\t}\n\t}\n\n\t${colorIterator('background', '.image')}\n`;\n\nexport const HorizontalCard: FC<CardProps> = ({title, subtitle, description, className, ImageProps, actions, ...props}) => {\n\tconst {toggleBooking} = useAppState();\n\n\treturn (\n\t\t<CardAnchor className={clsx('HorizontalCard-root', className)} {...props}>\n\t\t\t<Image className='image'/>\n\t\t\t<div className='content'>\n\t\t\t\t<Typography variant='caption'>{subtitle}</Typography>\n\t\t\t\t<Typography variant='h5'>{title}</Typography>\n\t\t\t\t<Typography variant='caption'>{description}</Typography>\n\t\t\t\t<ActionStack actions={actions}>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tcolor='secondary'\n\t\t\t\t\t\tsize='small'\n\t\t\t\t\t\tendIcon={<KeyboardArrowRight/>}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\ttoggleBooking();\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tBook Appointment\n\t\t\t\t\t</Button>\n\t\t\t\t</ActionStack>\n\t\t\t</div>\n\t\t</CardAnchor>\n\t);\n};\n","import {Message} from '@mui/icons-material';\nimport {Box, Typography} from '@mui/material';\nimport {css, styled} from '@mui/material/styles';\nimport {type FC} from 'react';\nimport {type ServiceOptions, type SharedBlockProps} from '../../types/general';\nimport {ActionStack} from '../base/ActionStack';\nimport {Block, type BlockProps} from '../base/Block';\nimport {Button} from '../base/Button';\nimport {Container} from '../base/Container';\nimport {Heading} from '../base/Heading';\nimport {HorizontalCard} from '../base/HorizontalCard';\n\nexport type ServicesBlockProps = {\n\tservices?: ServiceOptions[];\n\tBlockProps?: BlockProps;\n} & SharedBlockProps;\n\nexport const Content = styled('div')(\n\t({theme}) => css`\n\t\tmax-width: ${theme.breakpoints.values.sm}px;\n\n\t\t.ActionStack-root {\n\t\t\tmargin-top: 1.5rem;\n\t\t}\n\n\t\t.Heading-root {\n\t\t\tmargin-bottom: 0.5rem;\n\t\t}\n\t`,\n);\n\nconst Wrapper = styled('div')(\n\t({theme}) => css`\n\t\tdisplay: grid;\n\t\tgrid-template-columns: 1fr;\n\t\tgap: 3rem;\n\n\t\t.container {\n\t\t\ttext-align: center;\n\t\t\tdisplay: grid;\n\t\t\tgrid-template-columns: 1fr;\n\t\t\tgap: 1rem;\n\n\t\t\t.ActionStack-root {\n\t\t\t\tjustify-content: center !important;\n\t\t\t}\n\t\t}\n\n\t\t.services {\n\t\t\tdisplay: grid;\n\t\t\tgrid-template-columns: 1fr;\n\t\t\tgap: 1rem;\n\t\t}\n\n\t\t${theme.breakpoints.up('sm')} {\n\t\t\t.services {\n\t\t\t\trow-gap: 3rem;\n\t\t\t\tgrid-template-columns: repeat(2, 1fr);\n\t\t\t}\n\t\t}\n\n\t\t${theme.breakpoints.up('md')} {\n\t\t\t.services {\n\t\t\t\tgrid-template-columns: repeat(3, 1fr);\n\t\t\t}\n\t\t}\n\t`,\n);\n\nexport const ServicesBlock: FC<ServicesBlockProps> = ({title, subtitle, description, services}) => (\n\t<Block>\n\t\t<Container>\n\t\t\t<Wrapper>\n\t\t\t\t<Container className='container' size='small'>\n\t\t\t\t\t<Typography variant='overline'>{subtitle}</Typography>\n\t\t\t\t\t<Heading level={1}>{title}</Heading>\n\t\t\t\t\t<Typography variant='body2'>{description}</Typography>\n\t\t\t\t</Container>\n\t\t\t\t<div className='services'>\n\t\t\t\t\t{services?.map((service, serviceIndex) => (\n\t\t\t\t\t\t<HorizontalCard {...service} key={serviceIndex}/>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t\t<Container size='small'>\n\t\t\t\t\t<ActionStack align='center' color='secondary'>\n\t\t\t\t\t\t<Box mr={-1} zIndex={1}>\n\t\t\t\t\t\t\tLooking for something else?\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t<Button color='text' endIcon={<Message/>}>\n\t\t\t\t\t\t\tContact Us\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</ActionStack>\n\t\t\t\t</Container>\n\t\t\t</Wrapper>\n\t\t</Container>\n\t</Block>\n);\n\nServicesBlock.displayName = 'ServicesBlock';\n"],"names":["AppStateContext","createContext","useAppState","context","useContext","CardAnchor","styled","colorIterator","HorizontalCard","title","subtitle","description","className","ImageProps","actions","props","toggleBooking","jsxs","clsx","jsx","Image","Typography","ActionStack","Button","KeyboardArrowRight","theme","css","Wrapper","ServicesBlock","services","Block","Container","Heading","service","serviceIndex","createElement","Box","Message"],"mappings":"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"}