{"version":3,"file":"PageHeaderBlock.stories-b3e7a381.js","sources":["../../node_modules/@mui/material/esm/internal/svg-icons/MoreHoriz.js","../../node_modules/@mui/material/esm/Breadcrumbs/BreadcrumbCollapsed.js","../../node_modules/@mui/material/esm/Breadcrumbs/breadcrumbsClasses.js","../../node_modules/@mui/material/esm/Breadcrumbs/Breadcrumbs.js","../../src/components/base/Breadcrumbs.tsx","../../src/components/base/TopNav.tsx","../../src/components/block/PageHeaderBlock.tsx"],"sourcesContent":["import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { emphasize } from '@mui/system';\nimport styled from '../styles/styled';\nimport MoreHorizIcon from '../internal/svg-icons/MoreHoriz';\nimport ButtonBase from '../ButtonBase';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst BreadcrumbCollapsedButton = styled(ButtonBase)(({\n  theme\n}) => _extends({\n  display: 'flex',\n  marginLeft: `calc(${theme.spacing(1)} * 0.5)`,\n  marginRight: `calc(${theme.spacing(1)} * 0.5)`\n}, theme.palette.mode === 'light' ? {\n  backgroundColor: theme.palette.grey[100],\n  color: theme.palette.grey[700]\n} : {\n  backgroundColor: theme.palette.grey[700],\n  color: theme.palette.grey[100]\n}, {\n  borderRadius: 2,\n  '&:hover, &:focus': _extends({}, theme.palette.mode === 'light' ? {\n    backgroundColor: theme.palette.grey[200]\n  } : {\n    backgroundColor: theme.palette.grey[600]\n  }),\n  '&:active': _extends({\n    boxShadow: theme.shadows[0]\n  }, theme.palette.mode === 'light' ? {\n    backgroundColor: emphasize(theme.palette.grey[200], 0.12)\n  } : {\n    backgroundColor: emphasize(theme.palette.grey[600], 0.12)\n  })\n}));\nconst BreadcrumbCollapsedIcon = styled(MoreHorizIcon)({\n  width: 24,\n  height: 16\n});\n/**\n * @ignore - internal component.\n */\n\nfunction BreadcrumbCollapsed(props) {\n  const ownerState = props;\n  return /*#__PURE__*/_jsx(\"li\", {\n    children: /*#__PURE__*/_jsx(BreadcrumbCollapsedButton, _extends({\n      focusRipple: true\n    }, props, {\n      ownerState: ownerState,\n      children: /*#__PURE__*/_jsx(BreadcrumbCollapsedIcon, {\n        ownerState: ownerState\n      })\n    }))\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbCollapsed.propTypes = {\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default BreadcrumbCollapsed;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getBreadcrumbsUtilityClass(slot) {\n  return generateUtilityClass('MuiBreadcrumbs', slot);\n}\nconst breadcrumbsClasses = generateUtilityClasses('MuiBreadcrumbs', ['root', 'ol', 'li', 'separator']);\nexport default breadcrumbsClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"component\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"];\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { integerPropType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nimport breadcrumbsClasses, { getBreadcrumbsUtilityClass } from './breadcrumbsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    li: ['li'],\n    ol: ['ol'],\n    separator: ['separator']\n  };\n  return composeClasses(slots, getBreadcrumbsUtilityClass, classes);\n};\n\nconst BreadcrumbsRoot = styled(Typography, {\n  name: 'MuiBreadcrumbs',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [{\n      [`& .${breadcrumbsClasses.li}`]: styles.li\n    }, styles.root];\n  }\n})({});\nconst BreadcrumbsOl = styled('ol', {\n  name: 'MuiBreadcrumbs',\n  slot: 'Ol',\n  overridesResolver: (props, styles) => styles.ol\n})({\n  display: 'flex',\n  flexWrap: 'wrap',\n  alignItems: 'center',\n  padding: 0,\n  margin: 0,\n  listStyle: 'none'\n});\nconst BreadcrumbsSeparator = styled('li', {\n  name: 'MuiBreadcrumbs',\n  slot: 'Separator',\n  overridesResolver: (props, styles) => styles.separator\n})({\n  display: 'flex',\n  userSelect: 'none',\n  marginLeft: 8,\n  marginRight: 8\n});\n\nfunction insertSeparators(items, className, separator, ownerState) {\n  return items.reduce((acc, current, index) => {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/_jsx(BreadcrumbsSeparator, {\n        \"aria-hidden\": true,\n        className: className,\n        ownerState: ownerState,\n        children: separator\n      }, `separator-${index}`));\n    } else {\n      acc.push(current);\n    }\n\n    return acc;\n  }, []);\n}\n\nconst Breadcrumbs = /*#__PURE__*/React.forwardRef(function Breadcrumbs(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiBreadcrumbs'\n  });\n\n  const {\n    children,\n    className,\n    component = 'nav',\n    expandText = 'Show path',\n    itemsAfterCollapse = 1,\n    itemsBeforeCollapse = 1,\n    maxItems = 8,\n    separator = '/'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [expanded, setExpanded] = React.useState(false);\n\n  const ownerState = _extends({}, props, {\n    component,\n    expanded,\n    expandText,\n    itemsAfterCollapse,\n    itemsBeforeCollapse,\n    maxItems,\n    separator\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const listRef = React.useRef(null);\n\n  const renderItemsBeforeAndAfter = allItems => {\n    const handleClickExpand = () => {\n      setExpanded(true); // The clicked element received the focus but gets removed from the DOM.\n      // Let's keep the focus in the component after expanding.\n      // Moving it to the <ol> or <nav> does not cause any announcement in NVDA.\n      // By moving it to some link/button at least we have some announcement.\n\n      const focusable = listRef.current.querySelector('a[href],button,[tabindex]');\n\n      if (focusable) {\n        focusable.focus();\n      }\n    }; // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n\n\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['MUI: You have provided an invalid combination of props to the Breadcrumbs.', `itemsAfterCollapse={${itemsAfterCollapse}} + itemsBeforeCollapse={${itemsBeforeCollapse}} >= maxItems={${maxItems}}`].join('\\n'));\n      }\n\n      return allItems;\n    }\n\n    return [...allItems.slice(0, itemsBeforeCollapse), /*#__PURE__*/_jsx(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      onClick: handleClickExpand\n    }, \"ellipsis\"), ...allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)];\n  };\n\n  const allItems = React.Children.toArray(children).filter(child => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.isValidElement(child);\n  }).map((child, index) => /*#__PURE__*/_jsx(\"li\", {\n    className: classes.li,\n    children: child\n  }, `child-${index}`));\n  return /*#__PURE__*/_jsx(BreadcrumbsRoot, _extends({\n    ref: ref,\n    component: component,\n    color: \"text.secondary\",\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: /*#__PURE__*/_jsx(BreadcrumbsOl, {\n      className: classes.ol,\n      ref: listRef,\n      ownerState: ownerState,\n      children: insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator, ownerState)\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Show path'\n   */\n  expandText: PropTypes.string,\n\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   * @default 1\n   */\n  itemsAfterCollapse: integerPropType,\n\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   * @default 1\n   */\n  itemsBeforeCollapse: integerPropType,\n\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   * @default 8\n   */\n  maxItems: integerPropType,\n\n  /**\n   * Custom separator node.\n   * @default '/'\n   */\n  separator: PropTypes.node,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Breadcrumbs;","import MuiBreadcrumbs, {type BreadcrumbsProps as MuiBreadcrumbsProps} from '@mui/material/Breadcrumbs';\nimport {forwardRef} from 'react';\nimport {Link} from './Link';\n\nexport type BreadcrumbOptions = {\n\ttype?: 'link';\n\tlabel?: string;\n\thref?: string;\n};\n\ntype BreadcrumbsProps = {\n\titems?: BreadcrumbOptions[];\n} & MuiBreadcrumbsProps;\n\nexport const Breadcrumbs = forwardRef<HTMLDivElement, BreadcrumbsProps>(({children, items, ...props}, ref) => (\n\t<MuiBreadcrumbs {...props} ref={ref}>\n\t\t{children ?? items?.map(({label, ...props}, itemIndex) => <Link key={itemIndex} {...props}>{label}</Link>)}\n\t</MuiBreadcrumbs>\n));\n\nBreadcrumbs.displayName = 'Breadcrumbs';\n","import {css, styled} from '@mui/material/styles';\nimport {forwardRef, type ComponentPropsWithRef} from 'react';\nimport {type NavItemOptions} from '../../types/general';\nimport {NavItem} from './NavItem';\n\ntype TopNavProps = {\n\titems?: NavItemOptions[];\n\talign?: 'start' | 'end';\n} & ComponentPropsWithRef<'nav'>;\n\nconst defaultAlignment = 'start';\n\nconst TopNavWrapper = styled('nav')<TopNavProps>(\n\t({theme, align = defaultAlignment}) => css`\n\t\tdisplay: flex;\n\t\tgap: 0.25rem;\n\t\talign-items: center;\n\t\tjustify-content: ${align};\n\t`,\n);\n\nexport const TopNav = forwardRef<HTMLDivElement, TopNavProps>(\n\t({children, items, align = defaultAlignment, ...props}, ref) => (\n\t\t<TopNavWrapper {...props} ref={ref} className='TopNav-root' align={align}>\n\t\t\t{children ?? items?.map((item, itemIndex) => <NavItem key={itemIndex} {...item}/>)}\n\t\t</TopNavWrapper>\n\t),\n);\nTopNav.displayName = 'TopNav';\n","import {Typography} from '@mui/material';\nimport {css, styled} from '@mui/material/styles';\nimport {type FC} from 'react';\nimport {type NavItemOptions} from '../../types/general';\nimport {Block, type BlockProps} from '../base/Block';\nimport {Breadcrumbs, type BreadcrumbOptions} from '../base/Breadcrumbs';\nimport {Container} from '../base/Container';\nimport {Image, type ImageProps} from '../base/Image';\nimport {TopNav} from '../base/TopNav';\n\nexport type PageHeaderBlockProps = {\n\ttitle?: string;\n\tcolor?: string;\n\tbreadcrumbs?: BreadcrumbOptions[];\n\tnavigationItems?: NavItemOptions[];\n\tnavigationType?: 'scroll' | 'anchor-link';\n\tBlockProps?: BlockProps;\n\tImageProps?: ImageProps;\n};\n\nconst Wrapper = styled(Block)<{\n\tcolor?: string;\n}>(\n\t({theme, color}) => css`\n\t\tpadding-block: 2rem !important;\n\t\tbackground-color: ${color ? color : 'transparent'};\n\t`,\n);\n\nconst Content = styled('div')(\n\t({theme}) => css`\n\t\tdisplay: grid;\n\t\tgrid-template-columns: 1fr auto;\n\t\tgap: 2rem;\n\n\t\t.TopNav-root {\n\t\t\tdisplay: none;\n\n\t\t\t${theme.breakpoints.up('md')} {\n\t\t\t\tdisplay: flex;\n\t\t\t}\n\t\t}\n\t`,\n);\n\nconst TextContent = styled('div')`\n\tdisplay: grid;\n\tgrid-template-columns: 1fr;\n\tgap: 0.25rem;\n`;\n\nexport const PageHeaderBlock: FC<PageHeaderBlockProps> = ({\n\ttitle,\n\tcolor,\n\tbreadcrumbs,\n\tnavigationItems,\n\tImageProps,\n}) => (\n\t<>\n\t\t<Wrapper>\n\t\t\t<Container>\n\t\t\t\t<Content>\n\t\t\t\t\t<TextContent className='PageHeader-textContent'>\n\t\t\t\t\t\t<Breadcrumbs items={breadcrumbs}/>\n\t\t\t\t\t\t<Typography variant='h2' component='h1'>\n\t\t\t\t\t\t\t{title}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</TextContent>\n\t\t\t\t\t<TopNav align='end' items={navigationItems}/>\n\t\t\t\t</Content>\n\t\t\t</Container>\n\t\t</Wrapper>\n\t\t{ImageProps && <Image {...ImageProps} height='10rem' width='cover'/>}\n\t</>\n);\n\nPageHeaderBlock.displayName = 'PageHeaderBlock';\n"],"names":["MoreHorizIcon","createSvgIcon","_jsx","BreadcrumbCollapsedButton","styled","ButtonBase","theme","_extends","emphasize","BreadcrumbCollapsedIcon","BreadcrumbCollapsed","props","ownerState","getBreadcrumbsUtilityClass","slot","generateUtilityClass","breadcrumbsClasses","generateUtilityClasses","breadcrumbsClasses$1","_excluded","useUtilityClasses","classes","composeClasses","BreadcrumbsRoot","Typography","styles","BreadcrumbsOl","BreadcrumbsSeparator","insertSeparators","items","className","separator","acc","current","index","Breadcrumbs","React.forwardRef","inProps","ref","useThemeProps","children","component","expandText","itemsAfterCollapse","itemsBeforeCollapse","maxItems","other","_objectWithoutPropertiesLoose","expanded","setExpanded","React.useState","listRef","React.useRef","renderItemsBeforeAndAfter","allItems","handleClickExpand","focusable","React.Children","child","React.isValidElement","clsx","MuiBreadcrumbs","forwardRef","jsx","label","props2","itemIndex","Link","defaultAlignment","TopNavWrapper","align","css","TopNav","item","NavItem","Wrapper","Block","color","Content","TextContent","PageHeaderBlock","title","breadcrumbs","navigationItems","ImageProps","jsxs","Fragment","Container","Image"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}