{"version":3,"file":"Button-b3c0cd51.js","sources":["../../src/components/base/Button.tsx"],"sourcesContent":["import {ButtonBase, type ButtonBaseProps} from '../atoms/ButtonBase';\nimport {css} from '@emotion/react';\nimport styled from '@emotion/styled';\nimport {_e} from '../../utils/excludePropsFromForwarding';\nimport clsx from 'clsx';\nimport {colord} from 'colord';\nimport {type FC} from 'react';\nimport colors from 'tailwindcss/colors';\nimport {type ColorVariants} from '../../types/color';\n\nexport type ButtonProps = {\n\tcolor?: ColorVariants;\n} & ButtonBaseProps;\n\nconst StyledButton = styled(\n\tButtonBase,\n\t_e('color'),\n)<ButtonProps>(props => {\n\tconst resolvedColor = {\n\t\tprimary: {\n\t\t\tvalue: '#B20838',\n\t\t\topacity: 1,\n\t\t},\n\t\tsecondary: {\n\t\t\tvalue: '#FDE047',\n\t\t\topacity: 1,\n\t\t},\n\t\ttertiary: {\n\t\t\tvalue: '#FFFFFF',\n\t\t\topacity: 1,\n\t\t},\n\t\ttext: {\n\t\t\tvalue: '#FFFFFF',\n\t\t\topacity: 0,\n\t\t},\n\t}[props.color ?? 'primary'];\n\n\tconst backgroundColor = colord(resolvedColor.value).alpha(resolvedColor.opacity).toHex();\n\tconst hoveredBackgroundColor = colord(resolvedColor.value).darken(0.035).alpha(resolvedColor.opacity).toHex();\n\tconst activeBackgroundColor = colord(resolvedColor.value).darken(0.075).alpha(resolvedColor.opacity).toHex();\n\n\tconst textColor = colord(resolvedColor.value).isLight() ? colors.slate[900] : colors.slate[50];\n\n\tconst size = props.size ?? 'medium';\n\n\treturn css`\n\t\tbackground-color: ${backgroundColor};\n\t\tbox-shadow: var(--input-shadow), var(--shadow-elevation-0);\n\t\tborder-radius: 4px;\n\n\t\tfont-weight: 500;\n\t\tfont-size: 14px;\n\t\tletter-spacing: -0.01em;\n\t\tcolor: ${textColor};\n\n\t\tpadding-inline: var(--input-padding-x-${size});\n\t\theight: var(--input-height-${size});\n\t\tline-height: var(--input-height-${size});\n\t\tborder: var(--input-border);\n\n\t\t${props.color === 'text'\n\t\t? css`\n\t\t\t\t\tbox-shadow: unset;\n\t\t\t\t\ttext-decoration: underline;\n\t\t\t\t\ttext-underline-offset: 3px;\n\t\t\t\t\ttext-decoration-thickness: 1.5px;\n\t\t\t  `\n\t\t: css``}\n\n\t\t&:hover {\n\t\t\tbackground-color: ${hoveredBackgroundColor};\n\t\t}\n\n\t\t&:active {\n\t\t\tbackground-color: ${activeBackgroundColor};\n\t\t}\n\t`;\n});\n\nexport const Button: FC<ButtonProps> = ({children, className, color = 'tertiary', ...props}) => (\n\t<StyledButton {...props} color={color} role='button' className={clsx(className, 'Button-root')}>\n\t\t{children}\n\t</StyledButton>\n);\n"],"names":["StyledButton","styled","ButtonBase","_e","props","resolvedColor","backgroundColor","colord","hoveredBackgroundColor","activeBackgroundColor","textColor","colors","size","css","Button","children","className","color","jsx","clsx"],"mappings":"0WAcA,MAAAA,EAAAC,EAAqBC,EACpBC,EAAA,OAAA,CAED,EAAAC,GAAA,CACC,MAAAC,EAAA,CAAsB,QAAA,CACZ,MAAA,UACD,QAAA,CACE,EACV,UAAA,CACW,MAAA,UACH,QAAA,CACE,EACV,SAAA,CACU,MAAA,UACF,QAAA,CACE,EACV,KAAA,CACM,MAAA,UACE,QAAA,CACE,CACV,EAAAD,EAAA,OAAA,SAAA,EAGDE,EAAAC,EAAAF,EAAA,KAAA,EAAA,MAAAA,EAAA,OAAA,EAAA,QACAG,EAAAD,EAAAF,EAAA,KAAA,EAAA,OAAA,IAAA,EAAA,MAAAA,EAAA,OAAA,EAAA,MAAA,EACAI,EAAAF,EAAAF,EAAA,KAAA,EAAA,OAAA,IAAA,EAAA,MAAAA,EAAA,OAAA,EAAA,MAAA,EAEAK,EAAAH,EAAAF,EAAA,KAAA,EAAA,QAAA,EAAAM,EAAA,MAAA,GAAA,EAAAA,EAAA,MAAA,EAAA,EAEAC,EAAAR,EAAA,MAAA,SAEA,OAAAS;AAAA,sBAAOP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACcI;AAAA;AAAA,0CAOXE;AAAA,+BAE+BA;AAAA,oCACXA;AAAA;AAAA;AAAA,IACKR,EAAA,QAAA,OAAAS;AAAA;AAAA;AAAA;AAAA;AAAA,OAIhCA;AAAA;AAAA;AAAA,uBAMAL;AAAA;AAAA;AAAA;AAAA,uBAGmBC;AAAA;AAAA,EAOvB,CAAA,EAEOK,EAAA,CAAA,CAAA,SAAAC,EAAA,UAAAC,EAAA,MAAAC,EAAA,WAAA,GAAAb,KAAAc,EAAAlB,EAAA,CAAA,GAAAI,EAAA,MAAAa,EAAA,KAAA,SAAA,UAAAE,EAAAH,EAAA,aAAA,EAAA,SAAAD,EAAA"}