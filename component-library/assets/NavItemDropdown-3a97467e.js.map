{"version":3,"file":"NavItemDropdown-3a97467e.js","sources":["../../src/components/base/NavItem.tsx","../../src/components/base/NavItemDropdown.tsx"],"sourcesContent":["import {styled} from '@mui/material/styles';\nimport {type ComponentPropsWithoutRef, type FC, type ReactNode} from 'react';\nimport {type NavItemOptions} from '../../types/general';\nimport {colorIterator} from '../../utils/colorIterator';\nimport {KeyboardArrowDown} from '@mui/icons-material';\n\nexport type NavItemProps = {\n\ticon?: ReactNode;\n\thasSubmenu?: boolean;\n} & ComponentPropsWithoutRef<'nav'> &\n\tNavItemOptions;\n\nconst variant = 'text';\nconst size = 'large';\n\nconst StyledAnchor = styled('a')`\n\ttext-decoration: unset;\n\tcursor: pointer;\n\n\tdisplay: var(--input-display);\n\talign-items: var(--input-align-items);\n\n\tfont-weight: var(--button-font-weight);\n\tfont-size: var(--input-font-size-${size});\n\tletter-spacing: var(--button-letter-spacing);\n\n\tbackground-color: var(--button-background-color-${variant});\n\tbox-shadow: var(--button-shadow-${variant});\n\tcolor: var(--button-text-color-${variant});\n\tborder: var(--button-border-${variant});\n\n\tpadding-inline: var(--input-spacing-padding-inline-${size});\n\tline-height: var(--input-height-${size});\n\theight: var(--input-height-${size});\n\twhite-space: nowrap;\n\n\t& svg {\n\t\theight: var(--input-group-action-size-${size});\n\t\twidth: var(--input-group-action-size-${size});\n\t}\n\n\t&:hover,\n\t&[aria-current='true'] {\n\t\t${colorIterator('text-decoration-color')}\n\t\ttext-decoration: var(--button-text-decoration-${variant});\n\t\ttext-underline-offset: var(--button-text-offset-${variant});\n\t\ttext-decoration-thickness: var(--button-text-thickness-${variant});\n\t}\n`;\n\nexport const NavItem: FC<NavItemProps> = ({\n\tlabel,\n\tchildren,\n\tselected,\n\ticon,\n\thasSubmenu,\n\t...props\n}) => (\n\t<StyledAnchor aria-current={selected} {...props}>\n\t\t{icon}\n\t\t{children ?? label}\n\t\t{hasSubmenu && <KeyboardArrowDown />}\n\t</StyledAnchor>\n);\n","import {KeyboardArrowDown} from '@mui/icons-material';\nimport {Menu, MenuItem, Popover, type PopoverOrigin} from '@mui/material';\nimport {\n\tuseState,\n\ttype ComponentType,\n\ttype FC,\n\ttype MouseEventHandler\n} from 'react';\nimport {type NavItemOptions} from '../../types/general';\nimport {type ButtonProps} from './Button';\nimport {NavItem} from './NavItem';\n\nexport type NavItemDropdownProps = {\n\titems?: NavItemOptions[];\n\tFlyoutComponent?: ComponentType<unknown>;\n} & ButtonProps;\n\nexport const NavItemDropdown: FC<NavItemDropdownProps> = ({\n\tFlyoutComponent,\n\tchildren,\n\titems\n}) => {\n\tconst [anchorEl, setAnchorEl] = useState<HTMLButtonElement | undefined>(\n\t\tundefined\n\t);\n\tconst open = Boolean(anchorEl);\n\n\tconst handleClick: MouseEventHandler<HTMLButtonElement> = event => {\n\t\tsetAnchorEl(event.currentTarget);\n\t};\n\n\tconst handleClose = () => {\n\t\tsetAnchorEl(undefined);\n\t};\n\n\tconst sharedProps = {\n\t\topen,\n\t\tanchorEl,\n\t\tonClose: handleClose,\n\t\tanchorOrigin: {\n\t\t\tvertical: 'bottom',\n\t\t\thorizontal: 'left'\n\t\t} as PopoverOrigin,\n\t\tdisableScrollLock: true,\n\t\tdisablePortal: true,\n\t\ttransitionDuration: 200\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<NavItem\n\t\t\t\thasSubmenu\n\t\t\t\tselected={open}\n\t\t\t\taria-controls={open ? 'basic-menu' : undefined}\n\t\t\t\taria-haspopup=\"true\"\n\t\t\t\taria-expanded={open ? 'true' : undefined}\n\t\t\t\tonClick={handleClick}\n\t\t\t>\n\t\t\t\t{children}\n\t\t\t</NavItem>\n\t\t\t{FlyoutComponent ? (\n\t\t\t\t<Popover {...sharedProps}>\n\t\t\t\t\t<FlyoutComponent />\n\t\t\t\t</Popover>\n\t\t\t) : (\n\t\t\t\t<Menu\n\t\t\t\t\t{...sharedProps}\n\t\t\t\t\tMenuListProps={{\n\t\t\t\t\t\t'aria-labelledby': 'basic-button',\n\t\t\t\t\t\t'sx': {\n\t\t\t\t\t\t\tminWidth: '10rem'\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{items?.map((item, itemIndex) => (\n\t\t\t\t\t\t<MenuItem\n\t\t\t\t\t\t\tkey={itemIndex}\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\thandleClose();\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{item.label}\n\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t))}\n\t\t\t\t</Menu>\n\t\t\t)}\n\t\t</>\n\t);\n};\n"],"names":["variant","size","StyledAnchor","styled","colorIterator","NavItem","label","children","selected","icon","hasSubmenu","props","jsxs","jsx","KeyboardArrowDown","NavItemDropdown","FlyoutComponent","items","anchorEl","setAnchorEl","useState","open","handleClick","event","handleClose","sharedProps","Fragment","Popover","Menu","item","itemIndex","MenuItem"],"mappings":"0SAYA,MAAAA,EAAA,OACAC,EAAA,QAEAC,EAAAC,EAAA,GAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAA+BF;AAAA;AAAA;AAAA,mDAQKD;AAAA,mCAGeA;AAAA,kCAChBA;AAAA,+BACDA;AAAA;AAAA,sDACHC;AAAA,mCAEuBA;AAAA,8BACnBA;AAAA;AAAA;AAAA;AAAA,0CACLA;AAAA,yCAIYA;AAAA;AAAA;AAAA;AAAA;AAAA,IACDG,EAAA,uBAAA;AAAA,kDAKAJ;AAAA,oDACSA;AAAA,2DACEA;AAAA;AAAA,EAK7CK,EAAA,CAAA,CAAmC,MAAAC,EACzC,SAAAC,EACA,SAAAC,EACA,KAAAC,EACA,WAAAC,EACA,GAAAC,CAED,IAAAC,EAAAV,EAAA,CAAA,eAAAM,EAAA,GAAAG,EAAA,SAAA,CAEGF,EAAAF,GAAAD,EACYI,GAAAG,EAAAC,EAAA,EAAA,CACqB,EAAA,8oBC5C7B,MAAAC,EAAA,CAAA,CAAmD,gBAAAC,EACzD,SAAAT,EACA,MAAAU,CAED,IAAA,CACC,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAAgC,MAC/B,EAEDC,EAAA,EAAAH,EAEAI,EAAAC,GAAA,CACCJ,EAAAI,EAAA,aAAA,CAA+B,EAGhCC,EAAA,IAAA,CACCL,EAAA,MAAA,CAAqB,EAGtBM,EAAA,CAAoB,KAAAJ,EACnB,SAAAH,EACA,QAAAM,EACS,aAAA,CACK,SAAA,SACH,WAAA,MACE,EACb,kBAAA,GACmB,cAAA,GACJ,mBAAA,GACK,EAGrB,OAAAZ,EAAAc,EAAA,CAAA,SAAA,CAEEb,EAAAR,EAAC,CAAA,WAAA,GACU,SAAAgB,EACA,gBAAAA,EAAA,aAAA,OAC2B,gBAAA,OACvB,gBAAAA,EAAA,OAAA,OACiB,QAAAC,EACtB,SAAAf,CAER,CAAA,EACFS,EAAAH,EAAAc,EAAA,CAAA,GAAAF,EAAA,SAAAZ,EAAAG,EAAA,EAAA,CAAA,CAAA,EAAAH,EAMCe,EAAC,CAAA,GAAAH,EACI,cAAA,CACW,kBAAA,eACK,GAAA,CACb,SAAA,OACK,CACX,EACD,SAAAR,GAAA,YAAAA,EAAA,IAAA,CAAAY,EAAAC,IAAAjB,EAGCkB,EAAC,CAAA,QAAA,IAAA,CAGCP,GAAY,EACb,SAAAK,EAAA,KAEM,EAAAC,CALD,EAON,CAAA,CACF,CAAA,CAAA,CAIJ"}