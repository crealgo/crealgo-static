{"version":3,"file":"useThemeProps-4c706523.js","sources":["../../node_modules/@mui/utils/esm/resolveProps.js","../../node_modules/@mui/private-theming/useTheme/ThemeContext.js","../../node_modules/@mui/private-theming/useTheme/useTheme.js","../../node_modules/@mui/system/esm/useThemeWithoutDefault.js","../../node_modules/@mui/system/esm/useTheme.js","../../node_modules/@mui/system/esm/useThemeProps/getThemeProps.js","../../node_modules/@mui/system/esm/useThemeProps/useThemeProps.js","../../node_modules/@mui/material/esm/styles/useThemeProps.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\n/**\n * Add keys, values of `defaultProps` that does not exist in `props`\n * @param {object} defaultProps\n * @param {object} props\n * @returns {object} resolved props\n */\nexport default function resolveProps(defaultProps, props) {\n  const output = _extends({}, props);\n  Object.keys(defaultProps).forEach(propName => {\n    if (propName.toString().match(/^(components|slots)$/)) {\n      output[propName] = _extends({}, defaultProps[propName], output[propName]);\n    } else if (propName.toString().match(/^(componentsProps|slotProps)$/)) {\n      const defaultSlotProps = defaultProps[propName] || {};\n      const slotProps = props[propName];\n      output[propName] = {};\n      if (!slotProps || !Object.keys(slotProps)) {\n        // Reduce the iteration if the slot props is empty\n        output[propName] = defaultSlotProps;\n      } else if (!defaultSlotProps || !Object.keys(defaultSlotProps)) {\n        // Reduce the iteration if the default slot props is empty\n        output[propName] = slotProps;\n      } else {\n        output[propName] = _extends({}, slotProps);\n        Object.keys(defaultSlotProps).forEach(slotPropName => {\n          output[propName][slotPropName] = resolveProps(defaultSlotProps[slotPropName], slotProps[slotPropName]);\n        });\n      }\n    } else if (output[propName] === undefined) {\n      output[propName] = defaultProps[propName];\n    }\n  });\n  return output;\n}","import * as React from 'react';\nconst ThemeContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== 'production') {\n  ThemeContext.displayName = 'ThemeContext';\n}\n\nexport default ThemeContext;","import * as React from 'react';\nimport ThemeContext from './ThemeContext';\nexport default function useTheme() {\n  const theme = React.useContext(ThemeContext);\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useDebugValue(theme);\n  }\n\n  return theme;\n}","import { useTheme as muiUseTheme } from '@mui/private-theming';\n\nfunction isObjectEmpty(obj) {\n  return Object.keys(obj).length === 0;\n}\n\nfunction useTheme(defaultTheme = null) {\n  const contextTheme = muiUseTheme();\n  return !contextTheme || isObjectEmpty(contextTheme) ? defaultTheme : contextTheme;\n}\n\nexport default useTheme;","import createTheme from './createTheme';\nimport useThemeWithoutDefault from './useThemeWithoutDefault';\nexport const systemDefaultTheme = createTheme();\n\nfunction useTheme(defaultTheme = systemDefaultTheme) {\n  return useThemeWithoutDefault(defaultTheme);\n}\n\nexport default useTheme;","import { internal_resolveProps as resolveProps } from '@mui/utils';\nexport default function getThemeProps(params) {\n  const {\n    theme,\n    name,\n    props\n  } = params;\n\n  if (!theme || !theme.components || !theme.components[name] || !theme.components[name].defaultProps) {\n    return props;\n  }\n\n  return resolveProps(theme.components[name].defaultProps, props);\n}","import getThemeProps from './getThemeProps';\nimport useTheme from '../useTheme';\nexport default function useThemeProps({\n  props,\n  name,\n  defaultTheme\n}) {\n  const theme = useTheme(defaultTheme);\n  const mergedProps = getThemeProps({\n    theme,\n    name,\n    props\n  });\n  return mergedProps;\n}","import { useThemeProps as systemUseThemeProps } from '@mui/system';\nimport defaultTheme from './defaultTheme';\nexport default function useThemeProps({\n  props,\n  name\n}) {\n  return systemUseThemeProps({\n    props,\n    name,\n    defaultTheme\n  });\n}"],"names":["resolveProps","defaultProps","props","output","_extends","propName","defaultSlotProps","slotProps","slotPropName","ThemeContext","React.createContext","ThemeContext$1","useTheme","React.useContext","isObjectEmpty","obj","defaultTheme","contextTheme","muiUseTheme","systemDefaultTheme","createTheme","useThemeWithoutDefault","getThemeProps","params","theme","name","useThemeProps","systemUseThemeProps"],"mappings":"wLAOe,SAASA,EAAaC,EAAcC,EAAO,CACxD,MAAMC,EAASC,EAAS,CAAE,EAAEF,CAAK,EACjC,cAAO,KAAKD,CAAY,EAAE,QAAQI,GAAY,CAC5C,GAAIA,EAAS,SAAQ,EAAG,MAAM,sBAAsB,EAClDF,EAAOE,CAAQ,EAAID,EAAS,CAAE,EAAEH,EAAaI,CAAQ,EAAGF,EAAOE,CAAQ,CAAC,UAC/DA,EAAS,SAAU,EAAC,MAAM,+BAA+B,EAAG,CACrE,MAAMC,EAAmBL,EAAaI,CAAQ,GAAK,CAAA,EAC7CE,EAAYL,EAAMG,CAAQ,EAChCF,EAAOE,CAAQ,EAAI,GACf,CAACE,GAAa,CAAC,OAAO,KAAKA,CAAS,EAEtCJ,EAAOE,CAAQ,EAAIC,EACV,CAACA,GAAoB,CAAC,OAAO,KAAKA,CAAgB,EAE3DH,EAAOE,CAAQ,EAAIE,GAEnBJ,EAAOE,CAAQ,EAAID,EAAS,CAAE,EAAEG,CAAS,EACzC,OAAO,KAAKD,CAAgB,EAAE,QAAQE,GAAgB,CACpDL,EAAOE,CAAQ,EAAEG,CAAY,EAAIR,EAAaM,EAAiBE,CAAY,EAAGD,EAAUC,CAAY,CAAC,CAC/G,CAAS,QAEML,EAAOE,CAAQ,IAAM,SAC9BF,EAAOE,CAAQ,EAAIJ,EAAaI,CAAQ,EAE9C,CAAG,EACMF,CACT,CChCA,MAAMM,EAA4BC,EAAAA,cAAoB,IAAI,EAM1DC,EAAeF,ECLA,SAASG,GAAW,CAQjC,OAPcC,aAAiBJ,CAAY,CAQ7C,CCTA,SAASK,EAAcC,EAAK,CAC1B,OAAO,OAAO,KAAKA,CAAG,EAAE,SAAW,CACrC,CAEA,SAASH,EAASI,EAAe,KAAM,CACrC,MAAMC,EAAeC,IACrB,MAAO,CAACD,GAAgBH,EAAcG,CAAY,EAAID,EAAeC,CACvE,CCPO,MAAME,EAAqBC,EAAW,EAE7C,SAASR,EAASI,EAAeG,EAAoB,CACnD,OAAOE,EAAuBL,CAAY,CAC5C,CCLe,SAASM,EAAcC,EAAQ,CAC5C,KAAM,CACJ,MAAAC,EACA,KAAAC,EACA,MAAAvB,CACD,EAAGqB,EAEJ,MAAI,CAACC,GAAS,CAACA,EAAM,YAAc,CAACA,EAAM,WAAWC,CAAI,GAAK,CAACD,EAAM,WAAWC,CAAI,EAAE,aAC7EvB,EAGFF,EAAawB,EAAM,WAAWC,CAAI,EAAE,aAAcvB,CAAK,CAChE,CCXe,SAASwB,EAAc,CACpC,MAAAxB,EACA,KAAAuB,EACA,aAAAT,CACF,EAAG,CACD,MAAMQ,EAAQZ,EAASI,CAAY,EAMnC,OALoBM,EAAc,CAChC,MAAAE,EACA,KAAAC,EACA,MAAAvB,CACJ,CAAG,CAEH,CCZe,SAASwB,EAAc,CACpC,MAAAxB,EACA,KAAAuB,CACF,EAAG,CACD,OAAOE,EAAoB,CACzB,MAAAzB,EACA,KAAAuB,EACA,aAAAT,CACJ,CAAG,CACH","x_google_ignoreList":[0,1,2,3,4,5,6,7]}