{"version":3,"file":"Container-f017ee1c.js","sources":["../../src/components/base/Block.tsx","../../src/components/base/Container.tsx"],"sourcesContent":["import { css, styled } from \"@mui/material\";\nimport { ComponentPropsWithoutRef, FC } from \"react\";\nimport { _e } from \"../../utils/excludePropsFromForwarding\";\n\ntype BaseElementProps = ComponentPropsWithoutRef<\"div\">;\n\nexport interface BlockProps {\n\tcolor?: \"primary\" | \"secondary\" | \"grey\";\n\trounded?: boolean;\n}\n\nconst BaseElement: FC<BaseElementProps> = (props) => (\n\t<div {...props} className={`Block-root ${props.className}`}>\n\t\t{props.children}\n\t</div>\n);\n\nexport const Block = styled(\n\tBaseElement,\n\t_e(\"rounded\", \"color\")\n)<BlockProps>((props) => {\n\tconst blockColor = {\n\t\tdefault: \"transparent\",\n\t\tprimary: props.theme.palette.primary.light,\n\t\tsecondary: props.theme.palette.secondary.light,\n\t\tgrey: props.theme.palette.grey[100],\n\t}[props.color ?? \"default\"];\n\n\treturn css`\n\t\tbackground-color: ${blockColor};\n\t\tposition: relative;\n\n\t\tpadding-block: 4rem;\n\t\tpadding-inline: 1.5rem;\n\n\t\t${props.theme.breakpoints.up(\"md\")} {\n\t\t\tpadding-block: 7rem;\n\t\t\tpadding-inline: 2rem;\n\n\t\t\tborder-radius: ${props.rounded ? \"0.5rem\" : \"0rem\"};\n\t\t}\n\n\t\t${props.theme.breakpoints.up(\"xl\")} {\n\t\t\tpadding-inline: 4rem;\n\t\t}\n\t`;\n});\n","import { css, styled } from \"@mui/material\";\nimport { _e } from \"../../utils/excludePropsFromForwarding\";\nimport { ComponentPropsWithRef, FC } from \"react\";\n\ntype BaseElementProps = ComponentPropsWithRef<\"div\">;\n\ntype ContainerProps = {\n\tsize?: \"small\" | \"medium\" | \"large\";\n};\n\nconst BaseElement: FC<BaseElementProps> = ({ className, children, ref, ...props }) => (\n\t<div ref={ref} className={`Container-root ${className}`} {...props}>\n\t\t{children}\n\t</div>\n);\n\nexport const Container = styled(\n\tBaseElement,\n\t_e(\"ref\", \"size\")\n)<ContainerProps>(({ theme, size }) => {\n\tconst containerSize = {\n\t\tsmall: theme.breakpoints.values.md,\n\t\tmedium: theme.breakpoints.values.lg,\n\t\tlarge: theme.breakpoints.values.xl,\n\t}[size ?? \"medium\"];\n\n\tconst containerMaxWidth = size\n\t\t? `\n\t\t\tmax-width: ${containerSize}px;\n\t\t`\n\t\t: `\n\t\t${theme.breakpoints.up(\"md\")} {\n\t\t\tmax-width: ${theme.breakpoints.values.md}px;\n\t\t}\n\n\t\t${theme.breakpoints.up(\"lg\")} {\n\t\t\tmax-width: ${theme.breakpoints.values.lg}px;\n\t\t}\n\n\t\t${theme.breakpoints.up(\"xl\")} {\n\t\t\tmax-width: ${theme.breakpoints.values.xl}px;\n\t\t}\n\t`;\n\n\treturn css`\n\t\twidth: 100%;\n\t\tmargin-inline: auto;\n\t\t${containerMaxWidth}\n\t`;\n});\n"],"names":["BaseElement","props","jsx","Block","styled","_e","blockColor","css","className","children","ref","Container","theme","size","containerSize","containerMaxWidth"],"mappings":"gNAWA,MAAAA,EAAAC,GAAAC,EAAA,MAAA,CAAA,GAAAD,EAAA,UAAA,cAAAA,EAAA,YAAA,SAAAA,EAAA,QAAA,CAAA,EAMOE,EAAAC,EAAcJ,EACpBK,EAAA,UAAA,OAAA,CAED,EAAAJ,GAAA,CACC,MAAAK,EAAA,CAAmB,QAAA,cACT,QAAAL,EAAA,MAAA,QAAA,QAAA,MAC4B,UAAAA,EAAA,MAAA,QAAA,UAAA,MACI,KAAAA,EAAA,MAAA,QAAA,KAAA,GAAA,CACP,EAAAA,EAAA,OAAA,SAAA,EAGnC,OAAAM;AAAA,sBAAOD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IACcL,EAAA,MAAA,YAAA,GAAA,IAAA;AAAA;AAAA;AAAA;AAAA,oBAMaA,EAAA,QAAA,SAAA;AAAA;AAAA;AAAA,IAIYA,EAAA,MAAA,YAAA,GAAA,IAAA;AAAA;AAAA;AAAA,EAO/C,CAAA,2LCpCA,MAAAD,EAAA,CAAA,CAAA,UAAAQ,EAAA,SAAAC,EAAA,IAAAC,EAAA,GAAAT,CAAA,IAAAC,EAAA,MAAA,CAAA,IAAAQ,EAAA,UAAA,kBAAAF,IAAA,GAAAP,EAAA,SAAAQ,CAAA,CAAA,EAMOE,EAAAP,EAAkBJ,EACxBK,EAAA,MAAA,MAAA,CAED,EAAA,CAAA,CAAA,MAAAO,EAAA,KAAAC,KAAA,CACC,MAAAC,EAAA,CAAsB,MAAAF,EAAA,YAAA,OAAA,GACW,OAAAA,EAAA,YAAA,OAAA,GACC,MAAAA,EAAA,YAAA,OAAA,EACD,EAAAC,GAAA,QAAA,EAGjCE,EAAAF,EAAA;AAAA,gBACGC;AAAA,IACY;AAAA,IAEZF,EAAA,YAAA,GAAA,IAAA;AAAA,gBACyBA,EAAA,YAAA,OAAA;AAAA;AAAA;AAAA,IACYA,EAAA,YAAA,GAAA,IAAA;AAAA,gBAGZA,EAAA,YAAA,OAAA;AAAA;AAAA;AAAA,IACYA,EAAA,YAAA,GAAA,IAAA;AAAA,gBAGZA,EAAA,YAAA,OAAA;AAAA;AAAA,GAK5B,OAAAL;AAAA;AAAA;AAAA,IAAOQ;AAAA,EAKR,CAAA"}